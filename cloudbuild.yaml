steps:
- name: gcr.io/cloud-builders/go
  env: ['PROJECT_ROOT=vrctlviz']
  entrypoint: 'ash'
  args:
   - -c
   - |
     . /builder/prepare_workspace.inc 
     prepare_workspace || exit
     env | sort
     ls
     go get
     go build
     mkdir -p rootfs/usr/bin
     cp vrctlviz rootfs/usr/bin/vrctlviz
     ls rootfs/usr/bin
     mkdir -p vizceral/rootfs/usr/bin
     cp vrctlviz vizceral/rootfs/usr/bin/vrctlviz
     ls vizceral/rootfs/usr/bin
     cp vrctlviz vrctlviz-alpine
     export GOOS=linux
     export GOARCH=amd64
     go get
     go build
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', 'vrctlviz', 'gs://itc3-public/']
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', 'vrctlviz-alpine', 'gs://itc3-public/']
- name: "gcr.io/cloud-builders/docker"
  args: ["build", "-t", "gcr.io/itc3-production/vrctlviz/vizceral:$BRANCH_NAME", "-f", "vizceral/Dockerfile", "vizceral"]
- name: "gcr.io/cloud-builders/docker"
  args: ["build", "-t", "gcr.io/itc3-production/vrctlviz/collector:$BRANCH_NAME", "-f", "Dockerfile", "."]
images:
  - "gcr.io/itc3-production/vrctlviz/vizceral:$BRANCH_NAME"
  - "gcr.io/itc3-production/vrctlviz/collector:$BRANCH_NAME"

